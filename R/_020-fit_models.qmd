


```{r}
model1_h5_path <- here::here("mplus_output", "model1", "model1.h5")
model2_h5_path <- here::here("mplus_output", "model2", "model2.h5")

hrs16_cog <- readRDS(fs::path(r_objects_folder, "020_hrs16_cog.rds"))
```

```{r}
item_df <- tribble(~item, ~label,
"vdori",  "Orientation to time",
"vdlfl1z",  "Animal naming",
"vdlfl2",  "Scissors & cactus",
"vdlfl3",  "President & vice-president",
"vdcount", "Count backwards from 20",
"vdsevens", "Serial sevens",
"vdwdimmz", "Immediate word recall",
"vdwddelz", "Delayed word recall",
"vdexf7z", "Number series"
)

```

# Model results

A single factor CFA model was fit to the items.

## Model 1

The first model used all the items.

The model fit for this model was "poor".

```{r}
#| tbl-cap: "Model 1: Fit statistics"
#| label: tbl-model1-fit

mplush5::mplus.print.model.fit.information(model1_h5_path) %>%
  filter(grepl("RMSEA : E", description) |
         grepl("SRMR", description) |
         grepl("CFI", description) ) %>%
  gt::gt() %>%
  gt::fmt_number(
    columns = value,
    decimals = 3
  ) %>%
  gt::cols_label(
    description = "Fit statistic",
    value = "Value"
  ) %>%
  my_gt()

```


```{r}
#| tbl-cap: "Model 1: Factor loadings"
#| label: tbl-model1-loadings

mplush5::mplus.print.standardized.model.results(model1_h5_path, "stdyx") %>%
  filter(grepl("F BY", Statement))  %>%
  separate(Statement, into = c("f", "by", "item"), sep = " ") %>%
  mutate(item = str_to_lower(item)) %>%
  left_join(item_df, by = c("item" = "item")) %>%
  select(item, label, Estimate) %>%
  gt::gt() %>%
  gt::fmt_number(
    columns = Estimate,
    decimals = 3
  ) %>%
  gt::cols_label(
    item = "Item",
    label = "Label",
    Estimate = "Std Factor Loading"
  ) %>%
  my_gt()

```


## Model 2

The second model removed the immediate word recall item.

The model fit for this model was "good".

```{r}
#| tbl-cap: "Model 2: Fit statistics"
#| label: tbl-model2-fit

mplush5::mplus.print.model.fit.information(model2_h5_path) %>%
  filter(grepl("RMSEA : E", description) |
         grepl("SRMR", description) |
         grepl("CFI", description) ) %>%
  gt::gt() %>%
  gt::fmt_number(
    columns = value,
    decimals = 3
  ) %>%
  gt::cols_label(
    description = "Fit statistic",
    value = "Value"
  ) %>%
  my_gt()

```


```{r}
#| tbl-cap: "Model 2: Factor loadings"
#| label: tbl-model2-loadings

mplush5::mplus.print.standardized.model.results(model2_h5_path, "stdyx") %>%
  filter(grepl("F BY", Statement))  %>%
  separate(Statement, into = c("f", "by", "item"), sep = " ") %>%
  mutate(item = str_to_lower(item)) %>%
  left_join(item_df, by = c("item" = "item")) %>%
  select(item, label, Estimate) %>%
  gt::gt() %>%
  gt::fmt_number(
    columns = Estimate,
    decimals = 3
  ) %>%
  gt::cols_label(
    item = "Item",
    label = "Label",
    Estimate = "Std Factor Loading"
  ) %>%
  my_gt()

```

### Factor scores

This is the distribution of the factor scores from the final model.

```{r}
#| fig-cap: Distribution of factor scores by HCAP inclusion status
#| label: fig-hist-factor-scores-hcap


F_mean <- hrs16_cog %>%
  filter(!is.na(normexcld)) %>%
  mutate(normexcld_f = factor(normexcld, labels = c("HCAP - Included sample", "HCAP - Excluded sample"))) %>%
  group_by(normexcld_f) %>%
  summarize(mean = mean(F, na.rm=TRUE))

hrs16_cog %>%
  filter(!is.na(normexcld)) %>%
  mutate(normexcld_f = factor(normexcld, labels = c("HCAP - Included sample", "HCAP - Excluded sample"))) %>%
  ggplot(aes(x = F)) +
  geom_histogram() +
  geom_vline(data = F_mean, aes(xintercept = mean), color = "red") +
  facet_wrap(~normexcld_f, ncol=1) +
  hrbrthemes::theme_ipsum()
```


```{r}
#| fig-cap: Distribution of factor scores by HCAP inclusion status, including HRS sample
#| label: fig-hist-factor-scores-hrs

F_mean <- hrs16_cog %>%
  mutate(
    f = factor(normexcld, labels = c("HCAP - Included sample", "HCAP - Excluded sample")),
    normexcld_f = forcats::fct_explicit_na(f, "Non-HCAP HRS")
    ) %>%
  group_by(normexcld_f) %>%
  summarize(mean = mean(F, na.rm=TRUE))

hrs16_cog %>%
  mutate(
    f = factor(normexcld, labels = c("HCAP - Included sample", "HCAP - Excluded sample")),
    normexcld_f = forcats::fct_explicit_na(f, "Non-HCAP HRS")
    ) %>%
  ggplot(aes(x = F)) +
  geom_histogram() +
  geom_vline(data = F_mean, aes(xintercept = mean), color = "red") +
  facet_wrap(~normexcld_f, ncol=1) +
  hrbrthemes::theme_ipsum()

```
